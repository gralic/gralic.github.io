q()
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
library(caret)
set.seed(33833)
modFitB = train(y~., data=vowel.train, method="gbm", verbose=FALSE)
modFitB
pred <- predict(modFitB, vowel.test)
print(table(pred, test$y))
print(table(pred, vowel.test$y))
table(vowel.test$y)
table(vowel.train$y)
summary(vowel.train$y)
summary(vowel.test$y)
sum(round(pred+1)==vowel.test$y)
sum(round(pred)==vowel.test$y)
sum(as.integer(pred)==vowel.test$y)
vowel.test$y = as.factor(vowel.test$y)
vowel.train$y = as.factor(vowel.train$y)
modFitB = train(y~., data=vowel.train, method="gbm", verbose=FALSE)
pred <- predict(modFitB, vowel.test)
head(table(pred, vowel.test$y))
sum(pred==vowel.test$y)
sum(pred==vowel.test$y)/462
modFitRF = train(y~., data=vowel.train, method="rf", prox=TRUE)
predRF <- predict(modFitRF, vowel.test)
sum(predRF==vowel.test$y)/462
agree = vowel.test[pred==predRF,]
apred = pred[pred==predRF,]
apred = pred[pred==predRF]
sum(apred==agree$y)/329
library(e1071)
x<-seq(-10,10,length=1000)
manipulate(
plot(x,exp(beta0+beta1*x)/(1+exp(beta0+beta1*x)),
type="l",lwd=3,frame=FALSE),
beta1=slider(-2,2,step=.1,initial=2),
beta0=slider(-2,2,step=.1,initial=0)
)
library(manipulate)
x<-seq(-10,10,length=1000)
manipulate(
plot(x,exp(beta0+beta1*x)/(1+exp(beta0+beta1*x)),
type="l",lwd=3,frame=FALSE),
beta1=slider(-2,2,step=.1,initial=2),
beta0=slider(-2,2,step=.1,initial=0)
)
f = glm(data=shuttle, use~wind, family='binomial')
library(MASS)
f = glm(data=shuttle, use~wind, family='binomial')
exp(f$coeff)
f = glm(data=shuttle, use~wind+magn, family='binomial')
exp(f$coeff)
f = glm(data=shuttle, use~wind+magn+wind*magn, family='binomial')
exp(f$coeff)
1/0.969
1/1.327
f = glm(data=shuttle, use~wind, family='binomial')
f$coeff
exp(f$coeff)
log(1.327)
f = glm(data=shuttle, use~wind+magn+wind*magn, family='binomial')
exp(f$coeff)
f$coeff
f = glm(data=shuttle, use~wind+magn, family='binomial')
f$coeff
exp(f$coeff)
f = glm(data=shuttle, use~wind+magn+wind*magn, family='binomial')
exp(f$coeff)
1/0.88
table(as.numeric(shuttle$wind), as.numeric(shuttle$use))
table(as.numeric(s$wind), as.numeric(s$use))
s=shuttle
table(as.numeric(s$wind), as.numeric(s$use))
table(as.numeric(s$magn), as.numeric(s$use))
table(as.numeric(s$wind)*5+as.numeric(s$magn), as.numeric(s$use))
summary(s)
summary(InsectSprays)
plot(InsectSprays)
summary(InsectSprays$spray)
summary(InsectSprays$count)
table(InsectSprays)
dim(insectSprays)
dim(InsectSprays)
InsectSprays
glm(count ~ spray, family = poisson, data=InsectSprays)
glm(count ~ spray, family = poisson, data=InsectSprays)$coeffs
glm(count ~ spray, family = poisson, data=InsectSprays)$coeff
s=InsectSpray
data(InsectSpray)
s=InsectSprays
?offset()
t = seq(1,2,72)
t = seq(2,3,72)
t = seq(2.0,3.0,72)
?seq()
t = seq(2.0,3.0,1/72)
glm(spray ~ count + offset(t), family = poisson, data=InsectSprays)$coeff
t = seq(2.0,3.0,1/71)
glm(spray ~ count + offset(t), family = poisson, data=InsectSprays)$coeff
class(s$count)
class(s$spray)
glm(count ~ spray, family = poisson, data=InsectSprays)$coeff
exp(glm(count ~ spray, family = poisson, data=InsectSprays)$coeff)
1/exp(glm(count ~ spray, family = poisson, data=InsectSprays)$coeff)
1/(glm(count ~ spray, family = poisson, data=InsectSprays)$coeff)
glm(count ~ spray + offset(t), family = poisson, data=InsectSprays)$coeff
t2 <- log(10) + t
glm(count ~ spray + offset(t2), family = poisson, data=InsectSprays)$coeff
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(y)
x <- -5:5
plot(y~x)
seq(0,8*pi,length=20)
x
y
seq(0,5,length=2)
seq(0,50,length=2)
knots = seq(0,50,length=2)
splineTerms<-sapply(knots,function(knot)(x>knot)*(x-knot))
xMat<-cbind(1,x,splineTerms)
xMat
yhat<-predict(lm(y~xMat-1))
plot(x,y,frame=FALSE,pch=21,bg="lightblue",cex=2)
lines(x,yhat,col="red",lwd=2)
yhat
-0.1825806 + 5*1.013
?knitr
??knitr
library(knitr)
version(knitr)
ver(knitr)
summary(lm(mtcars$mpg~factor(am)+wt+disp-cyl,data=mtcars))
summary(lm(mtcars$mpg~factor(am)+wt+factor(cyl),data=mtcars))
summary(lm(mtcars$mpg~factor(am)+wt,data=mtcars))
?seq()
x=seq(-2.01,2,0.01)
y=4/x + x^4
y
plot(y~x)
y[201]
y[202]
y[200]
y[203]
y[202]=800
plot(y~x)
plot(y~x, pch=19)
table(y~x, pch=19)
table(y,x)
hist(y)
hist(y~x)
plot(y~x, pch=19)
qplot(y~x, pch=19)
library(lattice)
library(ggplot2)
qplot(y~x, pch=19)
qplot(y~x)
qplot(x,y)
x=seq(-2,2,0.01)
y=4/x + x^4
y[200]
y[201]
y[202]
qplot(x,y)
y[y>100]=100
y[y<-100]=-100
qplot(x,y)
y=4/x + x^4
y[y>100]=100
y[y<(-100)]=-100
qplot(x,y)
y[300]
y[301]
y[302]
rnorm(10)
install.packages("DDPQuiz3")
install.packages("C:/Users/alexander/Downloads/DDPQuiz3_1.0.zip", repos = NULL)
getwd()
setwd("./r/slidif1//presentation1")
publish(user="gralic", repo="ShinySlidify")
install.packages("slidify")
library(slidify)
publish(user="gralic", repo="ShinySlidify")
publish(user="gralic", repo="ShinySlidify")
publish_github(user="gralic", repo="ShinySlidify")
